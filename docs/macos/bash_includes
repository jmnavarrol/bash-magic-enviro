# To be 'sourced' from ~/.bashrc

echo "HELLO, WORLD! from bash_includes"

# Personal secrets and other variables
# (make sure this file is protected with restrictive permissions

# Adds user's bin dir to path if it exists and not already so
if ! [[ ":$PATH:" == *":$HOME/bin:"* ]]; then
	if [ -d "$HOME/bin" ]; then
		PATH="$HOME/bin:$PATH"
	else
		echo "Please create '~/bin' for BME to work properly."
	fi
fi

# Sets PATH on macOS for GNU-compatible tooling
# See https://apple.stackexchange.com/questions/103228/homebrew-easy-way-to-add-gnubin-to-path-for-multiple-packages
function set_gnu_path() {
local gnu_packages=(
	coreutils
	findutils
	grep
)

	for gnu_package in ${gnu_packages[@]}; do
		if [[ -d "/usr/local/opt/${gnu_package}" ]]; then
			export PATH="/usr/local/opt/${gnu_package}/libexec/gnubin:$PATH"
			export MANPATH="/usr/local/opt/${gnu_package}/libexec/gnuman:$MANPATH"
		else
			local warn_msg="WARNING: while trying to set \$PATH for '${gnu_package}':\n"
			warn_msg+="\tdirectory '/usr/local/opt/${gnu_package}' couldn't be found.\n"
			warn_msg+="\tdid you 'brew install ${gnu_package}'?"
			echo -e "${warn_msg}"
		fi
	done
	unset gnu_package
}
# export -f set_gnu_path
set_gnu_path && unset -f set_gnu_path
