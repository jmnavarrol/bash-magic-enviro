# Meant to be sourced by 'Bash Magic Enviro'
# Compares local and remote versions

check-version_load() {
local unmet_dependencies=false

	if [ -z "${BME_VERSION}" ]; then
		bme_log "${C_BOLD}'\$BME_VERSION'${C_NC} should be exported by main ${C_BOLD}'${BASH_SOURCE[${#BASH_SOURCE[@]} - 1]}'${C_NC}, but I couldn't find it." error 1
		unmet_dependencies=true
	fi
	if [ -z "${BME_SRC_DIR}" ]; then
		bme_log "${C_BOLD}'\$BME_SRC_DIR'${C_NC} should be exported by main ${C_BOLD}'${BASH_SOURCE[${#BASH_SOURCE[@]} - 1]}'${C_NC}, but I couldn't find it." error 1
		unmet_dependencies=true
	fi
	
	if ($unmet_dependencies); then
		check-version_unload
		bme_log "${C_BOLD}'check-version'${C_NC} not loaded. See missed dependencies above." error 1
		return -1
	else
		bme_log "${C_BOLD}'check-version'${C_NC} loaded." info 1
		bme_log "${C_BOLD}check-version${C_NC} - Compares local and remote versions of BME." function 2
	fi
}


check-version_unload() {
	unset -f check-version
}


check-version() {
# Get highest remote tag
	# Gets the current bash magic enviro remote
	local current_remote=`git --git-dir "${BME_SRC_DIR}/.git" ls-remote --get-url`
	
	# Gets the sorted list of remote tags
	local remote_tags=(`git --git-dir "${BME_SRC_DIR}/.git" ls-remote --refs --tags --sort -version:refname ${current_remote} | cut --delimiter='/' --fields=3`)
	
	# then, get the last one (which should be the highest by "version name").
	local highest_tag="${remote_tags[0]}"
	
# Shows version comparation results
	if [ "${BME_VERSION}" == "${highest_tag}" ]; then
		bme_log "${C_BOLD}'Bash Magic Enviro'${C_NC} is up to date." info 0
	elif [[ " ${remote_tags[*]} " =~ " ${BME_VERSION} " ]]; then
	# Our current version is found in the list of remote tags but, since it's not the highest one, it must be lower
		local log_msg="New ${C_BOLD}'Bash Magic Enviro'${C_NC} version available.  Please, consider upgrading.\n"
			log_msg+="\tYour local version: ${C_BOLD}'${BME_VERSION}'${C_NC}.\n"
			log_msg+="\tHighest version at ${C_BOLD}'${current_remote}'${C_NC}: ${C_BOLD}'${highest_tag}'${C_NC}."
		bme_log "${log_msg}" info 0
	else
	# Weird: local version not found at remote
		local log_msg="Your current ${C_BOLD}'Bash Magic Enviro'${C_NC} couldn't be found at your remote.\n"
			log_msg+="\tYour local version: ${C_BOLD}'${BME_VERSION}'${C_NC}.\n"
			log_msg+="\tHighest version at ${C_BOLD}'${current_remote}'${C_NC}: ${C_BOLD}'${highest_tag}'${C_NC}."
		bme_log "${log_msg}" warning 0
	fi
}
